/**
   retrieve reference thermodynamic data for ev_fluid
*/
SS_ref G_SS_ev_fluid_function(SS_ref SS_ref_db, int EM_database, int len_ox, bulk_info z_b, double eps){
    
    int i, j;
    int n_em = SS_ref_db.n_em;
    
    char   *EM_tmp[] 		= {"H2","H2O"};
    for (int i = 0; i < SS_ref_db.n_em; i++){
        strcpy(SS_ref_db.EM_list[i],EM_tmp[i]);
    };
    
    em_data H2_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"H2", 
    										"equilibrium"	);
    
    em_data H2O_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"H2O", 
    										"equilibrium"	);
    
    SS_ref_db.gbase[0] 		= H2_eq.gb;
    SS_ref_db.gbase[1] 		= H2O_eq.gb;
    
    SS_ref_db.ElShearMod[0] 	= H2_eq.ElShearMod;
    SS_ref_db.ElShearMod[1] 	= H2O_eq.ElShearMod;
    
    for (i = 0; i < len_ox; i++){
        SS_ref_db.Comp[0][i] 	= H2_eq.C[i];
        SS_ref_db.Comp[1][i] 	= H2O_eq.C[i];
    }
    
    for (i = 0; i < n_em; i++){
        SS_ref_db.z_em[i] = 1.0;
    };
    
    !!! RANGE MISSING, WAIT FOR UPDATE !!!

    return SS_ref_db;
}

/**
   retrieve reference thermodynamic data for ev_ol
*/
SS_ref G_SS_ev_ol_function(SS_ref SS_ref_db, int EM_database, int len_ox, bulk_info z_b, double eps){
    
    int i, j;
    int n_em = SS_ref_db.n_em;
    
    char   *EM_tmp[] 		= {"fo","fa"};
    for (int i = 0; i < SS_ref_db.n_em; i++){
        strcpy(SS_ref_db.EM_list[i],EM_tmp[i]);
    };
    
    SS_ref_db.W[0] = 8.00000000000000;
    
    
    em_data fo_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"fo", 
    										"equilibrium"	);
    
    em_data fa_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"fa", 
    										"equilibrium"	);
    
    SS_ref_db.gbase[0] 		= fo_eq.gb;
    SS_ref_db.gbase[1] 		= fa_eq.gb;
    
    SS_ref_db.ElShearMod[0] 	= fo_eq.ElShearMod;
    SS_ref_db.ElShearMod[1] 	= fa_eq.ElShearMod;
    
    for (i = 0; i < len_ox; i++){
        SS_ref_db.Comp[0][i] 	= fo_eq.C[i];
        SS_ref_db.Comp[1][i] 	= fa_eq.C[i];
    }
    
    for (i = 0; i < n_em; i++){
        SS_ref_db.z_em[i] = 1.0;
    };
    
    !!! RANGE MISSING, WAIT FOR UPDATE !!!

    return SS_ref_db;
}

/**
   retrieve reference thermodynamic data for ev_br
*/
SS_ref G_SS_ev_br_function(SS_ref SS_ref_db, int EM_database, int len_ox, bulk_info z_b, double eps){
    
    int i, j;
    int n_em = SS_ref_db.n_em;
    
    char   *EM_tmp[] 		= {"br","fbr"};
    for (int i = 0; i < SS_ref_db.n_em; i++){
        strcpy(SS_ref_db.EM_list[i],EM_tmp[i]);
    };
    
    em_data br_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"br", 
    										"equilibrium"	);
    
    em_data fo_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"fo", 
    										"equilibrium"	);
    
    em_data fa_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"fa", 
    										"equilibrium"	);
    
    SS_ref_db.gbase[0] 		= br_eq.gb;
    SS_ref_db.gbase[1] 		= br_eq.gb + fa_eq.gb/2 - fo_eq.gb/2 + 2;
    
    SS_ref_db.ElShearMod[0] 	= br_eq.ElShearMod;
    SS_ref_db.ElShearMod[1] 	= br_eq.ElShearMod + fa_eq.ElShearMod/2 - fo_eq.ElShearMod/2;
    
    for (i = 0; i < len_ox; i++){
        SS_ref_db.Comp[0][i] 	= br_eq.C[i];
        SS_ref_db.Comp[1][i] 	= br_eq.C[i] + fa_eq.C[i]/2 - fo_eq.C[i]/2;
    }
    
    for (i = 0; i < n_em; i++){
        SS_ref_db.z_em[i] = 1.0;
    };
    
    !!! RANGE MISSING, WAIT FOR UPDATE !!!

    return SS_ref_db;
}

/**
   retrieve reference thermodynamic data for ev_ch
*/
SS_ref G_SS_ev_ch_function(SS_ref SS_ref_db, int EM_database, int len_ox, bulk_info z_b, double eps){
    
    int i, j;
    int n_em = SS_ref_db.n_em;
    
    char   *EM_tmp[] 		= {"chum","chuf"};
    for (int i = 0; i < SS_ref_db.n_em; i++){
        strcpy(SS_ref_db.EM_list[i],EM_tmp[i]);
    };
    
    SS_ref_db.W[0] = 36.0000000000000;
    
    
    em_data chum_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"chum", 
    										"equilibrium"	);
    
    em_data fo_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"fo", 
    										"equilibrium"	);
    
    em_data fa_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"fa", 
    										"equilibrium"	);
    
    SS_ref_db.gbase[0] 		= chum_eq.gb;
    SS_ref_db.gbase[1] 		= chum_eq.gb + 9*fa_eq.gb/2 - 9*fo_eq.gb/2 - 5;
    
    SS_ref_db.ElShearMod[0] 	= chum_eq.ElShearMod;
    SS_ref_db.ElShearMod[1] 	= chum_eq.ElShearMod + 9*fa_eq.ElShearMod/2 - 9*fo_eq.ElShearMod/2;
    
    for (i = 0; i < len_ox; i++){
        SS_ref_db.Comp[0][i] 	= chum_eq.C[i];
        SS_ref_db.Comp[1][i] 	= chum_eq.C[i] + 9*fa_eq.C[i]/2 - 9*fo_eq.C[i]/2;
    }
    
    for (i = 0; i < n_em; i++){
        SS_ref_db.z_em[i] = 1.0;
    };
    
    !!! RANGE MISSING, WAIT FOR UPDATE !!!

    return SS_ref_db;
}

/**
   retrieve reference thermodynamic data for ev_atg
*/
SS_ref G_SS_ev_atg_function(SS_ref SS_ref_db, int EM_database, int len_ox, bulk_info z_b, double eps){
    
    int i, j;
    int n_em = SS_ref_db.n_em;
    
    char   *EM_tmp[] 		= {"atgf","fatg","atgo","aatg","oatg"};
    for (int i = 0; i < SS_ref_db.n_em; i++){
        strcpy(SS_ref_db.EM_list[i],EM_tmp[i]);
    };
    
    SS_ref_db.W[0] = 12.0000000000000;
    SS_ref_db.W[1] = 4.00000000000000;
    SS_ref_db.W[2] = 10.0000000000000;
    SS_ref_db.W[3] = 8.00000000000000;
    SS_ref_db.W[4] = 8.00000000000000;
    SS_ref_db.W[5] = 15.0000000000000;
    SS_ref_db.W[6] = 13.6000000000000;
    SS_ref_db.W[7] = 7.00000000000000;
    SS_ref_db.W[8] = 5.60000000000000;
    SS_ref_db.W[9] = 2.00000000000000;
    
    
    em_data atg_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"atg", 
    										"equilibrium"	);
    
    em_data fta_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"fta", 
    										"equilibrium"	);
    
    em_data ta_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"ta", 
    										"equilibrium"	);
    
    em_data tats_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"tats", 
    										"equilibrium"	);
    
    em_data andr_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"andr", 
    										"equilibrium"	);
    
    em_data gr_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"gr", 
    										"equilibrium"	);
    
    SS_ref_db.gbase[0] 		= atg_eq.gb/16;
    SS_ref_db.gbase[1] 		= atg_eq.gb/16 + fta_eq.gb_eq.gb - ta_eq.gb - 28;
    SS_ref_db.gbase[2] 		= atg_eq.gb/16 + fta_eq.gb_eq.gb/3 - ta_eq.gb/3 - 11.33;
    SS_ref_db.gbase[3] 		= atg_eq.gb/16 - ta_eq.gb + ta_eq.gbts - 36;
    SS_ref_db.gbase[4] 		= andr_eq.gb/2 + atg_eq.gb/16 - gr_eq.gb/2 - ta_eq.gb + ta_eq.gbts - 5;
    
    SS_ref_db.ElShearMod[0] 	= atg_eq.ElShearMod;
    SS_ref_db.ElShearMod[1] 	= atg_eq.ElShearMod/16 + fta_eq.ElShearMod_eq.ElShearMod - ta_eq.ElShearMod;
    SS_ref_db.ElShearMod[2] 	= atg_eq.ElShearMod/16 + fta_eq.ElShearMod_eq.ElShearMod/3 - ta_eq.ElShearMod/3;
    SS_ref_db.ElShearMod[3] 	= atg_eq.ElShearMod/16 - ta_eq.ElShearMod + ta_eq.ElShearModts;
    SS_ref_db.ElShearMod[4] 	= andr_eq.ElShearMod/2 + atg_eq.ElShearMod/16 - gr_eq.ElShearMod/2 - ta_eq.ElShearMod + ta_eq.ElShearModts;
    
    for (i = 0; i < len_ox; i++){
        SS_ref_db.Comp[0][i] 	= atg_eq.C[i];
        SS_ref_db.Comp[1][i] 	= atg_eq.C[i]/16 + fta_eq.C[i]_eq.C[i] - ta_eq.C[i];
        SS_ref_db.Comp[2][i] 	= atg_eq.C[i]/16 + fta_eq.C[i]_eq.C[i]/3 - ta_eq.C[i]/3;
        SS_ref_db.Comp[3][i] 	= atg_eq.C[i]/16 - ta_eq.C[i] + ta_eq.C[i]ts;
        SS_ref_db.Comp[4][i] 	= andr_eq.C[i]/2 + atg_eq.C[i]/16 - gr_eq.C[i]/2 - ta_eq.C[i] + ta_eq.C[i]ts;
    }
    
    for (i = 0; i < n_em; i++){
        SS_ref_db.z_em[i] = 1.0;
    };
    
    !!! RANGE MISSING, WAIT FOR UPDATE !!!

    return SS_ref_db;
}

/**
   retrieve reference thermodynamic data for ev_g
*/
SS_ref G_SS_ev_g_function(SS_ref SS_ref_db, int EM_database, int len_ox, bulk_info z_b, double eps){
    
    int i, j;
    int n_em = SS_ref_db.n_em;
    
    char   *EM_tmp[] 		= {"py","alm"};
    for (int i = 0; i < SS_ref_db.n_em; i++){
        strcpy(SS_ref_db.EM_list[i],EM_tmp[i]);
    };
    
    SS_ref_db.W[0] = 0.1*SS_ref_db.P + 4.0;
    
    
    em_data py_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"py", 
    										"equilibrium"	);
    
    em_data alm_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"alm", 
    										"equilibrium"	);
    
    SS_ref_db.gbase[0] 		= py_eq.gb;
    SS_ref_db.gbase[1] 		= alm_eq.gb;
    
    SS_ref_db.ElShearMod[0] 	= py_eq.ElShearMod;
    SS_ref_db.ElShearMod[1] 	= alm_eq.ElShearMod;
    
    for (i = 0; i < len_ox; i++){
        SS_ref_db.Comp[0][i] 	= py_eq.C[i];
        SS_ref_db.Comp[1][i] 	= alm_eq.C[i];
    }
    
    for (i = 0; i < n_em; i++){
        SS_ref_db.z_em[i] = 1.0;
    };
    
    !!! RANGE MISSING, WAIT FOR UPDATE !!!

    return SS_ref_db;
}

/**
   retrieve reference thermodynamic data for ev_ta
*/
SS_ref G_SS_ev_ta_function(SS_ref SS_ref_db, int EM_database, int len_ox, bulk_info z_b, double eps){
    
    int i, j;
    int n_em = SS_ref_db.n_em;
    
    char   *EM_tmp[] 		= {"ta","fta","tao","tats","ota","tap"};
    for (int i = 0; i < SS_ref_db.n_em; i++){
        strcpy(SS_ref_db.EM_list[i],EM_tmp[i]);
    };
    
    SS_ref_db.W[0] = 12.0000000000000;
    SS_ref_db.W[1] = 8.00000000000000;
    SS_ref_db.W[2] = 10.0000000000000;
    SS_ref_db.W[3] = 9.50000000000000;
    SS_ref_db.W[4] = 55.0000000000000;
    SS_ref_db.W[5] = 4.00000000000000;
    SS_ref_db.W[6] = 16.5000000000000;
    SS_ref_db.W[7] = 16.3000000000000;
    SS_ref_db.W[8] = 43.0000000000000;
    SS_ref_db.W[9] = 12.5000000000000;
    SS_ref_db.W[10] = 12.3000000000000;
    SS_ref_db.W[11] = 52.0000000000000;
    SS_ref_db.W[12] = 0.500000000000000;
    SS_ref_db.W[13] = 65.0000000000000;
    SS_ref_db.W[14] = 66.5000000000000;
    
    
    em_data ta_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"ta", 
    										"equilibrium"	);
    
    em_data fta_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"fta", 
    										"equilibrium"	);
    
    em_data tats_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"tats", 
    										"equilibrium"	);
    
    em_data andr_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"andr", 
    										"equilibrium"	);
    
    em_data gr_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"gr", 
    										"equilibrium"	);
    
    em_data tap_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"tap", 
    										"equilibrium"	);
    
    SS_ref_db.gbase[0] 		= ta_eq.gb;
    SS_ref_db.gbase[1] 		= fta_eq.gb;
    SS_ref_db.gbase[2] 		= 2*fta_eq.gb_eq.gb/3 + ta_eq.gb/3 - 2;
    SS_ref_db.gbase[3] 		= tats_eq.gb;
    SS_ref_db.gbase[4] 		= andr_eq.gb/2 - gr_eq.gb/2 + tats_eq.gb + 4;
    SS_ref_db.gbase[5] 		= tap_eq.gb;
    
    SS_ref_db.ElShearMod[0] 	= ta_eq.ElShearMod;
    SS_ref_db.ElShearMod[1] 	= fta_eq.ElShearMod;
    SS_ref_db.ElShearMod[2] 	= 2*fta_eq.ElShearMod_eq.ElShearMod/3 + ta_eq.ElShearMod/3;
    SS_ref_db.ElShearMod[3] 	= tats_eq.ElShearMod;
    SS_ref_db.ElShearMod[4] 	= andr_eq.ElShearMod/2 - gr_eq.ElShearMod/2 + tats_eq.ElShearMod;
    SS_ref_db.ElShearMod[5] 	= tap_eq.ElShearMod;
    
    for (i = 0; i < len_ox; i++){
        SS_ref_db.Comp[0][i] 	= ta_eq.C[i];
        SS_ref_db.Comp[1][i] 	= fta_eq.C[i];
        SS_ref_db.Comp[2][i] 	= 2*fta_eq.C[i]_eq.C[i]/3 + ta_eq.C[i]/3;
        SS_ref_db.Comp[3][i] 	= tats_eq.C[i];
        SS_ref_db.Comp[4][i] 	= andr_eq.C[i]/2 - gr_eq.C[i]/2 + tats_eq.C[i];
        SS_ref_db.Comp[5][i] 	= tap_eq.C[i];
    }
    
    for (i = 0; i < n_em; i++){
        SS_ref_db.z_em[i] = 1.0;
    };
    
    !!! RANGE MISSING, WAIT FOR UPDATE !!!

    return SS_ref_db;
}

/**
   retrieve reference thermodynamic data for ev_chl
*/
SS_ref G_SS_ev_chl_function(SS_ref SS_ref_db, int EM_database, int len_ox, bulk_info z_b, double eps){
    
    int i, j;
    int n_em = SS_ref_db.n_em;
    
    char   *EM_tmp[] 		= {"clin","afchl","ames","daph","ochl1","ochl4","f3clin","mnchl"};
    for (int i = 0; i < SS_ref_db.n_em; i++){
        strcpy(SS_ref_db.EM_list[i],EM_tmp[i]);
    };
    
    SS_ref_db.W[0] = 17.0000000000000;
    SS_ref_db.W[1] = 17.0000000000000;
    SS_ref_db.W[2] = 20.0000000000000;
    SS_ref_db.W[3] = 30.0000000000000;
    SS_ref_db.W[4] = 21.0000000000000;
    SS_ref_db.W[5] = 2.00000000000000;
    SS_ref_db.W[6] = 6.00000000000000;
    SS_ref_db.W[7] = 16.0000000000000;
    SS_ref_db.W[8] = 37.0000000000000;
    SS_ref_db.W[9] = 20.0000000000000;
    SS_ref_db.W[10] = 4.00000000000000;
    SS_ref_db.W[11] = 15.0000000000000;
    SS_ref_db.W[12] = 23.0000000000000;
    SS_ref_db.W[13] = 30.0000000000000;
    SS_ref_db.W[14] = 29.0000000000000;
    SS_ref_db.W[15] = 13.0000000000000;
    SS_ref_db.W[16] = 19.0000000000000;
    SS_ref_db.W[17] = 17.0000000000000;
    SS_ref_db.W[18] = 18.0000000000000;
    SS_ref_db.W[19] = 33.0000000000000;
    SS_ref_db.W[20] = 22.0000000000000;
    SS_ref_db.W[21] = 4.00000000000000;
    SS_ref_db.W[22] = 24.0000000000000;
    SS_ref_db.W[23] = 28.6000000000000;
    SS_ref_db.W[24] = 19.0000000000000;
    SS_ref_db.W[25] = 19.0000000000000;
    SS_ref_db.W[26] = 22.0000000000000;
    SS_ref_db.W[27] = 8.00000000000000;
    
    
    em_data clin_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"clin", 
    										"equilibrium"	);
    
    em_data afchl_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"afchl", 
    										"equilibrium"	);
    
    em_data ames_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"ames", 
    										"equilibrium"	);
    
    em_data daph_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"daph", 
    										"equilibrium"	);
    
    em_data andr_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"andr", 
    										"equilibrium"	);
    
    em_data gr_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"gr", 
    										"equilibrium"	);
    
    em_data mnchl_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"mnchl", 
    										"equilibrium"	);
    
    SS_ref_db.gbase[0] 		= clin_eq.gb;
    SS_ref_db.gbase[1] 		= afchl_eq.gb;
    SS_ref_db.gbase[2] 		= ames_eq.gb;
    SS_ref_db.gbase[3] 		= daph_eq.gb;
    SS_ref_db.gbase[4] 		= afchl_eq.gb - clin_eq.gb + daph_eq.gb + 3;
    SS_ref_db.gbase[5] 		= afchl_eq.gb - clin_eq.gb/5 + daph_eq.gb/5 + 2.4;
    SS_ref_db.gbase[6] 		= andr_eq.gb/2 + clin_eq.gb - gr_eq.gb/2 + 40;
    SS_ref_db.gbase[7] 		= mnchl_eq.gb;
    
    SS_ref_db.ElShearMod[0] 	= clin_eq.ElShearMod;
    SS_ref_db.ElShearMod[1] 	= afchl_eq.ElShearMod;
    SS_ref_db.ElShearMod[2] 	= ames_eq.ElShearMod;
    SS_ref_db.ElShearMod[3] 	= daph_eq.ElShearMod;
    SS_ref_db.ElShearMod[4] 	= afchl_eq.ElShearMod - clin_eq.ElShearMod + daph_eq.ElShearMod;
    SS_ref_db.ElShearMod[5] 	= afchl_eq.ElShearMod - clin_eq.ElShearMod/5 + daph_eq.ElShearMod/5;
    SS_ref_db.ElShearMod[6] 	= andr_eq.ElShearMod/2 + clin_eq.ElShearMod - gr_eq.ElShearMod/2;
    SS_ref_db.ElShearMod[7] 	= mnchl_eq.ElShearMod;
    
    for (i = 0; i < len_ox; i++){
        SS_ref_db.Comp[0][i] 	= clin_eq.C[i];
        SS_ref_db.Comp[1][i] 	= afchl_eq.C[i];
        SS_ref_db.Comp[2][i] 	= ames_eq.C[i];
        SS_ref_db.Comp[3][i] 	= daph_eq.C[i];
        SS_ref_db.Comp[4][i] 	= afchl_eq.C[i] - clin_eq.C[i] + daph_eq.C[i];
        SS_ref_db.Comp[5][i] 	= afchl_eq.C[i] - clin_eq.C[i]/5 + daph_eq.C[i]/5;
        SS_ref_db.Comp[6][i] 	= andr_eq.C[i]/2 + clin_eq.C[i] - gr_eq.C[i]/2;
        SS_ref_db.Comp[7][i] 	= mnchl_eq.C[i];
    }
    
    for (i = 0; i < n_em; i++){
        SS_ref_db.z_em[i] = 1.0;
    };
    
    !!! RANGE MISSING, WAIT FOR UPDATE !!!

    return SS_ref_db;
}

/**
   retrieve reference thermodynamic data for ev_anth
*/
SS_ref G_SS_ev_anth_function(SS_ref SS_ref_db, int EM_database, int len_ox, bulk_info z_b, double eps){
    
    int i, j;
    int n_em = SS_ref_db.n_em;
    
    char   *EM_tmp[] 		= {"anth","gedf","ompa","omgl","otr","fant","a","b"};
    for (int i = 0; i < SS_ref_db.n_em; i++){
        strcpy(SS_ref_db.EM_list[i],EM_tmp[i]);
    };
    
    SS_ref_db.W[0] = 25.0000000000000;
    SS_ref_db.W[1] = 25.0000000000000;
    SS_ref_db.W[2] = 65.0000000000000;
    SS_ref_db.W[3] = 45.0000000000000;
    SS_ref_db.W[4] = 33.0000000000000;
    SS_ref_db.W[5] = 18.0000000000000;
    SS_ref_db.W[6] = 23.0000000000000;
    SS_ref_db.W[7] = -40.0000000000000;
    SS_ref_db.W[8] = 25.0000000000000;
    SS_ref_db.W[9] = 70.0000000000000;
    SS_ref_db.W[10] = 39.5000000000000;
    SS_ref_db.W[11] = 29.0000000000000;
    SS_ref_db.W[12] = 34.6000000000000;
    SS_ref_db.W[13] = 50.0000000000000;
    SS_ref_db.W[14] = 90.0000000000000;
    SS_ref_db.W[15] = 45.0000000000000;
    SS_ref_db.W[16] = 33.2000000000000;
    SS_ref_db.W[17] = 36.0000000000000;
    SS_ref_db.W[18] = 65.0000000000000;
    SS_ref_db.W[19] = 81.2000000000000;
    SS_ref_db.W[20] = 65.5000000000000;
    SS_ref_db.W[21] = 78.4000000000000;
    SS_ref_db.W[22] = 75.0000000000000;
    SS_ref_db.W[23] = 57.0000000000000;
    SS_ref_db.W[24] = 63.0000000000000;
    SS_ref_db.W[25] = 12.0000000000000;
    SS_ref_db.W[26] = 8.00000000000000;
    SS_ref_db.W[27] = 20.0000000000000;
    
    SS_ref_db.v[0] = 1.00000000000000;
    SS_ref_db.v[1] = 1.50000000000000;
    SS_ref_db.v[2] = 1.70000000000000;
    SS_ref_db.v[3] = 0.800000000000000;
    SS_ref_db.v[4] = 1.00000000000000;
    SS_ref_db.v[5] = 1.00000000000000;
    SS_ref_db.v[6] = 1.00000000000000;
    SS_ref_db.v[7] = 1.00000000000000;
    
    
    em_data anth_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"anth", 
    										"equilibrium"	);
    
    em_data ged_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"ged", 
    										"equilibrium"	);
    
    em_data parg_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"parg", 
    										"equilibrium"	);
    
    em_data tr_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"tr", 
    										"equilibrium"	);
    
    em_data gl_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"gl", 
    										"equilibrium"	);
    
    em_data fanth_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"fanth", 
    										"equilibrium"	);
    
    SS_ref_db.gbase[0] 		= anth_eq.gb;
    SS_ref_db.gbase[1] 		= ged_eq.gb + 22;
    SS_ref_db.gbase[2] 		= anth_eq.gb + parg_eq.gb - tr_eq.gb + 27;
    SS_ref_db.gbase[3] 		= gl_eq.gb + 15;
    SS_ref_db.gbase[4] 		= tr_eq.gb;
    SS_ref_db.gbase[5] 		= fanth_eq.gb + 7;
    SS_ref_db.gbase[6] 		= 3*anth_eq.gb/7 + 4*fanth_eq.gb_eq.gb/7 - 5.5;
    SS_ref_db.gbase[7] 		= 2*anth_eq.gb/7 + 5*fanth_eq.gb_eq.gb/7 - 6.7;
    
    SS_ref_db.ElShearMod[0] 	= anth_eq.ElShearMod;
    SS_ref_db.ElShearMod[1] 	= ged_eq.ElShearMod;
    SS_ref_db.ElShearMod[2] 	= anth_eq.ElShearMod + parg_eq.ElShearMod - tr_eq.ElShearMod;
    SS_ref_db.ElShearMod[3] 	= gl_eq.ElShearMod;
    SS_ref_db.ElShearMod[4] 	= tr_eq.ElShearMod;
    SS_ref_db.ElShearMod[5] 	= fanth_eq.ElShearMod;
    SS_ref_db.ElShearMod[6] 	= 3*anth_eq.ElShearMod/7 + 4*fanth_eq.ElShearMod_eq.ElShearMod/7;
    SS_ref_db.ElShearMod[7] 	= 2*anth_eq.ElShearMod/7 + 5*fanth_eq.ElShearMod_eq.ElShearMod/7;
    
    for (i = 0; i < len_ox; i++){
        SS_ref_db.Comp[0][i] 	= anth_eq.C[i];
        SS_ref_db.Comp[1][i] 	= ged_eq.C[i];
        SS_ref_db.Comp[2][i] 	= anth_eq.C[i] + parg_eq.C[i] - tr_eq.C[i];
        SS_ref_db.Comp[3][i] 	= gl_eq.C[i];
        SS_ref_db.Comp[4][i] 	= tr_eq.C[i];
        SS_ref_db.Comp[5][i] 	= fanth_eq.C[i];
        SS_ref_db.Comp[6][i] 	= 3*anth_eq.C[i]/7 + 4*fanth_eq.C[i]_eq.C[i]/7;
        SS_ref_db.Comp[7][i] 	= 2*anth_eq.C[i]/7 + 5*fanth_eq.C[i]_eq.C[i]/7;
    }
    
    for (i = 0; i < n_em; i++){
        SS_ref_db.z_em[i] = 1.0;
    };
    
    !!! RANGE MISSING, WAIT FOR UPDATE !!!

    return SS_ref_db;
}

/**
   retrieve reference thermodynamic data for ev_spi
*/
SS_ref G_SS_ev_spi_function(SS_ref SS_ref_db, int EM_database, int len_ox, bulk_info z_b, double eps){
    
    int i, j;
    int n_em = SS_ref_db.n_em;
    
    char   *EM_tmp[] 		= {"herc","sp","mt"};
    for (int i = 0; i < SS_ref_db.n_em; i++){
        strcpy(SS_ref_db.EM_list[i],EM_tmp[i]);
    };
    
    SS_ref_db.W[0] = 0.0;
    SS_ref_db.W[1] = 18.5000000000000;
    SS_ref_db.W[2] = 40.0000000000000;
    
    
    em_data herc_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"herc", 
    										"equilibrium"	);
    
    em_data sp_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"sp", 
    										"equilibrium"	);
    
    em_data mt_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"mt", 
    										"equilibrium"	);
    
    SS_ref_db.gbase[0] 		= herc_eq.gb;
    SS_ref_db.gbase[1] 		= sp_eq.gb;
    SS_ref_db.gbase[2] 		= mt_eq.gb;
    
    SS_ref_db.ElShearMod[0] 	= herc_eq.ElShearMod;
    SS_ref_db.ElShearMod[1] 	= sp_eq.ElShearMod;
    SS_ref_db.ElShearMod[2] 	= mt_eq.ElShearMod;
    
    for (i = 0; i < len_ox; i++){
        SS_ref_db.Comp[0][i] 	= herc_eq.C[i];
        SS_ref_db.Comp[1][i] 	= sp_eq.C[i];
        SS_ref_db.Comp[2][i] 	= mt_eq.C[i];
    }
    
    for (i = 0; i < n_em; i++){
        SS_ref_db.z_em[i] = 1.0;
    };
    
    !!! RANGE MISSING, WAIT FOR UPDATE !!!

    return SS_ref_db;
}

/**
   retrieve reference thermodynamic data for ev_opx
*/
SS_ref G_SS_ev_opx_function(SS_ref SS_ref_db, int EM_database, int len_ox, bulk_info z_b, double eps){
    
    int i, j;
    int n_em = SS_ref_db.n_em;
    
    char   *EM_tmp[] 		= {"en","fs","fm","mgts","fopx"};
    for (int i = 0; i < SS_ref_db.n_em; i++){
        strcpy(SS_ref_db.EM_list[i],EM_tmp[i]);
    };
    
    SS_ref_db.W[0] = 7.00000000000000;
    SS_ref_db.W[1] = 4.00000000000000;
    SS_ref_db.W[2] = 13.0 - 0.15*SS_ref_db.P;
    SS_ref_db.W[3] = 11.0 - 0.15*SS_ref_db.P;
    SS_ref_db.W[4] = 4.00000000000000;
    SS_ref_db.W[5] = 13.0 - 0.15*SS_ref_db.P;
    SS_ref_db.W[6] = 11.6 - 0.15*SS_ref_db.P;
    SS_ref_db.W[7] = 17.0 - 0.15*SS_ref_db.P;
    SS_ref_db.W[8] = 15.0 - 0.15*SS_ref_db.P;
    SS_ref_db.W[9] = 1.00000000000000;
    
    
    em_data en_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"en", 
    										"equilibrium"	);
    
    em_data fs_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"fs", 
    										"equilibrium"	);
    
    em_data mgts_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"mgts", 
    										"equilibrium"	);
    
    em_data andr_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"andr", 
    										"equilibrium"	);
    
    em_data gr_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"gr", 
    										"equilibrium"	);
    
    SS_ref_db.gbase[0] 		= en_eq.gb;
    SS_ref_db.gbase[1] 		= fs_eq.gb;
    SS_ref_db.gbase[2] 		= en_eq.gb/2 + fs_eq.gb/2 - 6.6;
    SS_ref_db.gbase[3] 		= mgts_eq.gb;
    SS_ref_db.gbase[4] 		= andr_eq.gb/2 - gr_eq.gb/2 + mgts_eq.gb + 2;
    
    SS_ref_db.ElShearMod[0] 	= en_eq.ElShearMod;
    SS_ref_db.ElShearMod[1] 	= fs_eq.ElShearMod;
    SS_ref_db.ElShearMod[2] 	= en_eq.ElShearMod/2 + fs_eq.ElShearMod/2;
    SS_ref_db.ElShearMod[3] 	= mgts_eq.ElShearMod;
    SS_ref_db.ElShearMod[4] 	= andr_eq.ElShearMod/2 - gr_eq.ElShearMod/2 + mgts_eq.ElShearMod;
    
    for (i = 0; i < len_ox; i++){
        SS_ref_db.Comp[0][i] 	= en_eq.C[i];
        SS_ref_db.Comp[1][i] 	= fs_eq.C[i];
        SS_ref_db.Comp[2][i] 	= en_eq.C[i]/2 + fs_eq.C[i]/2;
        SS_ref_db.Comp[3][i] 	= mgts_eq.C[i];
        SS_ref_db.Comp[4][i] 	= andr_eq.C[i]/2 - gr_eq.C[i]/2 + mgts_eq.C[i];
    }
    
    for (i = 0; i < n_em; i++){
        SS_ref_db.z_em[i] = 1.0;
    };
    
    !!! RANGE MISSING, WAIT FOR UPDATE !!!

    return SS_ref_db;
}

/**
   retrieve reference thermodynamic data for ev_po
*/
SS_ref G_SS_ev_po_function(SS_ref SS_ref_db, int EM_database, int len_ox, bulk_info z_b, double eps){
    
    int i, j;
    int n_em = SS_ref_db.n_em;
    
    char   *EM_tmp[] 		= {"trov","trot"};
    for (int i = 0; i < SS_ref_db.n_em; i++){
        strcpy(SS_ref_db.EM_list[i],EM_tmp[i]);
    };
    
    em_data trov_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"trov", 
    										"equilibrium"	);
    
    em_data trot_eq 		= get_em_data(		EM_database, 
    										len_ox,
    										z_b,
    										SS_ref_db.P,
    										SS_ref_db.T,
    										"trot", 
    										"equilibrium"	);
    
    SS_ref_db.gbase[0] 		= trov_eq.gb;
    SS_ref_db.gbase[1] 		= trot_eq.gb;
    
    SS_ref_db.ElShearMod[0] 	= trov_eq.ElShearMod;
    SS_ref_db.ElShearMod[1] 	= trot_eq.ElShearMod;
    
    for (i = 0; i < len_ox; i++){
        SS_ref_db.Comp[0][i] 	= trov_eq.C[i];
        SS_ref_db.Comp[1][i] 	= trot_eq.C[i];
    }
    
    for (i = 0; i < n_em; i++){
        SS_ref_db.z_em[i] = 1.0;
    };
    
    !!! RANGE MISSING, WAIT FOR UPDATE !!!

    return SS_ref_db;
}

